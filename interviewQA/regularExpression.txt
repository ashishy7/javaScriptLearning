what is reqular expression 
square of character that forms a search pattern
syntax:
/pattern/modifiers;
var msg = "Hello John";
var n = msg.search(/John/i); 
var msg = "Hello John";
var n = msg.replace(/John/i, "Buttler"); // Hello Buttler
modifiers
i  -- perform case insensitive matching
g- global match rather than stop at first match 
m - perform multline matching 
var text = "Learn JS one by one";
var pattern = /one/g;
var result = text.match(pattern); // one,one


hat are regular expression patterns
Regular Expressions provide a group of patterns in order to match characters. Basically they are categorized into 3 types,

Brackets: These are used to find a range of characters. For example, below are some use cases,
[abc]: Used to find any of the characters between the brackets(a,b,c)
[0-9]: Used to find any of the digits between the brackets
(a|b): Used to find any of the alternatives separated with |
Metacharacters: These are characters with a special meaning For example, below are some use cases,
\d: Used to find a digit
\s: Used to find a whitespace character
\b: Used to find a match at the beginning or ending of a word
Quantifiers: These are useful to define quantities For example, below are some use cases,
n+: Used to find matches for any string that contains at least one n
n*: Used to find matches for any string that contains zero or more occurrences of n
n?: Used to find matches for any string that contains zero or one occurrences of n


What is a RegExp object
RegExp object is a regular expression object with predefined properties and methods. Let's see the simple usage of RegExp object,

var regexp = new RegExp("\\w+");
console.log(regexp);
// expected output: /\w+/